name: actions

on: [push]
permissions:
  contents: write

jobs:
  build-sdist:
    name: Create sources on ${{ matrix.os }} with Python ${{ matrix.python-version }}
    environment: actions
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest]
        python-version: [ "3.12" ]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies Pybinding
        run: |
          python -m pip install wheel scipy matplotlib pytest cmake ninja build setuptools
          python -m pip install -i https://test.pypi.org/simple/ pybinding
      - name: Build wheel
        run: python -m build --sdist --outdir dist/
      - name: Test Python
        run: python -c "import tmdybinding as tmdy; exit(tmdy.tests())"
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  testpypi:
    name: Test upload on PyPi
    environment: actions
    if: github.ref == 'refs/heads/master'
    permissions:
      id-token: write
    needs: [ build-sdist ]
    runs-on: ubuntu-latest
    steps:
      - name: Download artefacts
        uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist
      - name: Publish distribution ðŸ“¦ to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  pypi:
    name: Publish to PyPi
    environment: actions
    if: github.ref == 'refs/heads/master'
    permissions:
      id-token: write
    needs: [ testpypi ]
    runs-on: ubuntu-latest
    steps:
      - name: Download artefacts
        uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist
      - name: Publish distribution ðŸ“¦ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  documentation:
    name: Make and upload the documentation
    environment: actions
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.12" ]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - run: pip install mkdocs-material mkdocstrings[python]
      - run: mkdocs gh-deploy --force
